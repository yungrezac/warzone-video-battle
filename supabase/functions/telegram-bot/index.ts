
import { serve } from "https://deno.land/std@0.190.0/http/server.ts";
import { createClient } from "https://esm.sh/@supabase/supabase-js@2";

const corsHeaders = {
  'Access-Control-Allow-Origin': '*',
  'Access-Control-Allow-Headers': 'authorization, x-client-info, apikey, content-type',
};

const serve_handler = async (req: Request): Promise<Response> => {
  if (req.method === 'OPTIONS') {
    return new Response(null, { headers: corsHeaders });
  }

  try {
    const update = await req.json();
    console.log('üéØ –ü–æ–ª—É—á–µ–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç Telegram:', JSON.stringify(update, null, 2));

    const supabase = createClient(
      Deno.env.get('SUPABASE_URL') ?? '',
      Deno.env.get('SUPABASE_SERVICE_ROLE_KEY') ?? ''
    );

    const botToken = Deno.env.get('TELEGRAM_BOT_TOKEN');
    if (!botToken) {
      throw new Error('TELEGRAM_BOT_TOKEN not set');
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
    const sendMessage = async (chatId: number, text: string, options: any = {}) => {
      try {
        const response = await fetch(`https://api.telegram.org/bot${botToken}/sendMessage`, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({
            chat_id: chatId,
            text: text,
            parse_mode: 'HTML',
            ...options
          }),
        });
        
        const result = await response.json();
        if (!result.ok) {
          console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', result);
        }
        return result;
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
      }
    };

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞ —Å –ø–æ–ª–Ω–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –ø–æ–¥–ø–∏—Å–æ–∫
    if (update.message?.successful_payment) {
      const payment = update.message.successful_payment;
      const user = update.message.from;
      
      console.log('üí∞ –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞:', {
        telegram_payment_charge_id: payment.telegram_payment_charge_id,
        invoice_payload: payment.invoice_payload,
        user_id: user.id,
        subscription_expiration_date: payment.subscription_expiration_date,
        is_recurring: payment.is_recurring,
        is_first_recurring: payment.is_first_recurring,
        total_amount: payment.total_amount,
        currency: payment.currency
      });

      // –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
      const { data: userProfile } = await supabase
        .from('profiles')
        .select('id')
        .eq('telegram_id', user.id.toString())
        .single();

      if (userProfile) {
        console.log('üë§ –ù–∞–π–¥–µ–Ω –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userProfile.id);
        
        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–ª–∞—Ç–µ–∂ —á–µ—Ä–µ–∑ –Ω–∞—à—É —Ñ—É–Ω–∫—Ü–∏—é —Å –ø–æ–ª–Ω–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –ø–æ–¥–ø–∏—Å–æ–∫
        const { data, error } = await supabase.functions.invoke('process-payment', {
          body: {
            user_id: userProfile.id,
            telegram_payment_charge_id: payment.telegram_payment_charge_id,
            telegram_invoice_payload: payment.invoice_payload,
            subscription_expiration_date: payment.subscription_expiration_date,
            is_recurring: payment.is_recurring || false,
            is_first_recurring: payment.is_first_recurring || false
          }
        });

        if (error) {
          console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–ª–∞—Ç–µ–∂–∞:', error);
          
          await sendMessage(user.id, 
            `‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –ø–ª–∞—Ç–µ–∂–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.\n\n` +
            `üí≥ ID –ø–ª–∞—Ç–µ–∂–∞: <code>${payment.telegram_payment_charge_id}</code>\n` +
            `üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞: @tricksby`
          );
        } else {
          console.log('‚úÖ –ü–ª–∞—Ç–µ–∂ –æ–±—Ä–∞–±–æ—Ç–∞–Ω —É—Å–ø–µ—à–Ω–æ:', data);
          
          // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞
          const successMessage = payment.is_first_recurring 
            ? `üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, ${user.first_name}!\n\n` +
              `üíé –í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ TRICKS PREMIUM –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –ø—Ä–æ–¥–ª–µ–Ω–∏–µ–º!\n\n` +
              `‚ú® –¢–µ–ø–µ—Ä—å –≤–∞–º –¥–æ—Å—Ç—É–ø–Ω—ã –≤—Å–µ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:\n` +
              `‚Ä¢ üéÅ –≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ —Å–∫–∏–¥–∫–∏ —É –ø–∞—Ä—Ç–Ω—ë—Ä–æ–≤\n` +
              `‚Ä¢ üèÜ –£—á–∞—Å—Ç–∏–µ –≤ —Ç—É—Ä–Ω–∏—Ä–∞—Ö\n` +
              `‚Ä¢ üí∞ –í—ã–≤–æ–¥ –±–∞–ª–ª–æ–≤ –≤ USDT\n` +
              `‚Ä¢ üëë –ü—Ä–µ–º–∏—É–º –∑–Ω–∞—á–æ–∫\n` +
              `‚Ä¢ üõçÔ∏è –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –º–∞—Ä–∫–µ—Ç\n\n` +
              `üîÑ –ü–æ–¥–ø–∏—Å–∫–∞ –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–¥–ª–µ–≤–∞—Ç—å—Å—è –∫–∞–∂–¥—ã–π –º–µ—Å—è—Ü –∑–∞ 1 ‚≠ê\n\n` +
              `üéÆ –û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: /app`
            : `‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ TRICKS PREMIUM –ø—Ä–æ–¥–ª–µ–Ω–∞!\n\n` +
              `üíé –í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞\n` +
              `üîÑ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–æ–¥–ª–µ–Ω–∏–µ: –≤–∫–ª—é—á–µ–Ω–æ\n\n` +
              `–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É!\n\n` +
              `üéÆ –û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: /app`;

          await sendMessage(user.id, successMessage);
        }
      } else {
        console.error('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:', user.id);
        
        await sendMessage(user.id, 
          `‚ùå –û—à–∏–±–∫–∞: –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ.\n\n` +
          `–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –æ—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ TRICKS —á–µ—Ä–µ–∑ /app –∏ —Å–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ—Ñ–∏–ª—å.\n\n` +
          `üìû –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ –Ω–µ —Ä–µ—à–∞–µ—Ç—Å—è, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É: @tricksby`
        );
      }
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ –∏ —Å–æ–æ–±—â–µ–Ω–∏–π
    if (update.message?.text) {
      const chatId = update.message.chat.id;
      const text = update.message.text;
      const user = update.message.from;

      console.log(`üì® –ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞: ${text} –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user.id}`);

      let response = '';
      let replyMarkup = null;

      switch (text) {
        case '/start':
          response = `üèÑ‚Äç‚ôÇÔ∏è –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ TRICKS, ${user.first_name}!\n\n` +
                    `üé™ TRICKS ‚Äî —ç—Ç–æ —Å–æ—Ü–∏–∞–ª—å–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è –ª—é–±–∏—Ç–µ–ª–µ–π —ç–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω—ã—Ö –≤–∏–¥–æ–≤ —Å–ø–æ—Ä—Ç–∞!\n\n` +
                    `üéØ –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ:\n` +
                    `‚Ä¢ üìπ –ó–∞–≥—Ä—É–∂–∞—Ç—å –≤–∏–¥–µ–æ —Å —Ç—Ä—é–∫–∞–º–∏\n` +
                    `‚Ä¢ üèÜ –£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –∫–æ–Ω–∫—É—Ä—Å–∞—Ö –∏ —Ç—É—Ä–Ω–∏—Ä–∞—Ö\n` +
                    `‚Ä¢ üí∞ –ü–æ–ª—É—á–∞—Ç—å –±–∞–ª–ª—ã –∏ –ø—Ä–∏–∑—ã\n` +
                    `‚Ä¢ üë• –û–±—â–∞—Ç—å—Å—è —Å –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–∞–º–∏\n` +
                    `‚Ä¢ üõçÔ∏è –ü–æ–∫—É–ø–∞—Ç—å —Ç–æ–≤–∞—Ä—ã –≤ –º–∞—Ä–∫–µ—Ç–µ\n\n` +
                    `üöÄ –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:`;
          
          replyMarkup = {
            inline_keyboard: [
              [{ text: 'üéÆ –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ', web_app: { url: 'https://cibytresc-wntdgxqjpfm.lovableproject.com' } }],
              [{ text: 'üíé Premium –ø–æ–¥–ø–∏—Å–∫–∞', callback_data: 'premium_info' }],
              [{ text: '‚ùì –ü–æ–º–æ—â—å', callback_data: 'help' }]
            ]
          };
          break;

        case '/app':
          response = `üéÆ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ TRICKS!\n\n` +
                    `–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:`;
          
          replyMarkup = {
            inline_keyboard: [
              [{ text: 'üöÄ –û—Ç–∫—Ä—ã—Ç—å TRICKS', web_app: { url: 'https://cibytresc-wntdgxqjpfm.lovableproject.com' } }]
            ]
          };
          break;

        case '/premium':
          response = `üíé TRICKS PREMIUM ‚Äî –ú–∞–∫—Å–∏–º—É–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π!\n\n` +
                    `üåü –ß—Ç–æ –¥–∞–µ—Ç Premium –ø–æ–¥–ø–∏—Å–∫–∞:\n\n` +
                    `‚ú® –≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ —Å–∫–∏–¥–∫–∏ —É –ø–∞—Ä—Ç–Ω—ë—Ä–æ–≤ TRICKS\n` +
                    `üèÜ –£—á–∞—Å—Ç–∏–µ –≤ –æ–Ω–ª–∞–π–Ω –∏ –æ—Ñ–ª–∞–π–Ω —Ç—É—Ä–Ω–∏—Ä–∞—Ö\n` +
                    `üéâ –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –Ω–∞ –∑–∞–∫—Ä—ã—Ç—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è\n` +
                    `üí∞ –í—ã–≤–æ–¥ –±–∞–ª–ª–æ–≤ –≤ USDT\n` +
                    `üëë –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –∑–Ω–∞—á–æ–∫ –ø—Ä–µ–º–∏—É–º-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n` +
                    `üõçÔ∏è –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–æ–±–∞–≤–ª—è—Ç—å —Ç–æ–≤–∞—Ä—ã –≤ –º–∞—Ä–∫–µ—Ç\n\n` +
                    `üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: –≤—Å–µ–≥–æ 1 ‚≠ê –≤ –º–µ—Å—è—Ü\n` +
                    `üîÑ –° –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –ø—Ä–æ–¥–ª–µ–Ω–∏–µ–º\n\n` +
                    `–î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –æ—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ!`;
          
          replyMarkup = {
            inline_keyboard: [
              [{ text: 'üéÆ –û—Ñ–æ—Ä–º–∏—Ç—å Premium', web_app: { url: 'https://cibytresc-wntdgxqjpfm.lovableproject.com' } }]
            ]
          };
          break;

        case '/help':
          response = `‚ùì –ü–æ–º–æ—â—å –ø–æ TRICKS\n\n` +
                    `üéÆ /app ‚Äî –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ\n` +
                    `üíé /premium ‚Äî –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ Premium\n` +
                    `üìä /stats ‚Äî –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n` +
                    `üõçÔ∏è /market ‚Äî –ú–∞—Ä–∫–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤\n` +
                    `üèÜ /tournaments ‚Äî –¢—É—Ä–Ω–∏—Ä—ã\n` +
                    `üìû /support ‚Äî –°–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π\n\n` +
                    `üì± –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–æ—Å—Ç—É–ø–Ω—ã –≤ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏.\n\n` +
                    `‚ùì –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏: @tricksby`;
          break;

        case '/support':
          response = `üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞ TRICKS\n\n` +
                    `–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å:\n` +
                    `üë®‚Äçüíº –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: @tricksby\n\n` +
                    `‚è∞ –í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: –æ–±—ã—á–Ω–æ –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤\n\n` +
                    `üìß –ò–ª–∏ –æ–ø–∏—à–∏—Ç–µ –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É –∑–¥–µ—Å—å, –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –ø–æ–º–æ—á—å!\n\n` +
                    `üéÆ –¢–∞–∫–∂–µ –≤—ã –º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º:`;
          
          replyMarkup = {
            inline_keyboard: [
              [{ text: 'üéÆ –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ', web_app: { url: 'https://cibytresc-wntdgxqjpfm.lovableproject.com' } }]
            ]
          };
          break;

        case '/stats':
          // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          const { data: userProfile } = await supabase
            .from('profiles')
            .select('*')
            .eq('telegram_id', user.id.toString())
            .single();

          if (userProfile) {
            const { data: userPoints } = await supabase
              .from('user_points')
              .select('total_points')
              .eq('user_id', userProfile.id)
              .single();

            response = `üìä –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤ TRICKS\n\n` +
                      `üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${userProfile.first_name || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}\n` +
                      `üí∞ –ë–∞–ª–ª—ã: ${userPoints?.total_points || 0}\n` +
                      `üíé Premium: ${userProfile.is_premium ? '‚úÖ –ê–∫—Ç–∏–≤–µ–Ω' : '‚ùå –ù–µ –∞–∫—Ç–∏–≤–µ–Ω'}\n` +
                      `üë• –ü–æ–¥–ø–∏—Å—á–∏–∫–∏: ${userProfile.followers_count || 0}\n` +
                      `üì∫ –ü–æ–¥–ø–∏—Å–∫–∏: ${userProfile.following_count || 0}\n\n` +
                      `üéÆ –û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:`;
            
            replyMarkup = {
              inline_keyboard: [
                [{ text: 'üìä –ü–æ–¥—Ä–æ–±–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', web_app: { url: 'https://cibytresc-wntdgxqjpfm.lovableproject.com' } }]
              ]
            };
          } else {
            response = `üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞\n\n` +
                      `–°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ—Ñ–∏–ª—å –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ TRICKS:`;
            
            replyMarkup = {
              inline_keyboard: [
                [{ text: 'üéÆ –°–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å', web_app: { url: 'https://cibytresc-wntdgxqjpfm.lovableproject.com' } }]
              ]
            };
          }
          break;

        case '/market':
          response = `üõçÔ∏è –ú–∞—Ä–∫–µ—Ç TRICKS\n\n` +
                    `–í –º–∞—Ä–∫–µ—Ç–µ –≤—ã –º–æ–∂–µ—Ç–µ:\n` +
                    `‚Ä¢ üéÅ –ü–æ–∫—É–ø–∞—Ç—å —Ç–æ–≤–∞—Ä—ã –∑–∞ –±–∞–ª–ª—ã\n` +
                    `‚Ä¢ üëï –ù–∞—Ö–æ–¥–∏—Ç—å —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—É—é –æ–¥–µ–∂–¥—É\n` +
                    `‚Ä¢ üõπ –ü–æ–∫—É–ø–∞—Ç—å –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –¥–ª—è —Ç—Ä—é–∫–æ–≤\n` +
                    `‚Ä¢ üíé Premium –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –º–æ–≥—É—Ç –¥–æ–±–∞–≤–ª—è—Ç—å —Å–≤–æ–∏ —Ç–æ–≤–∞—Ä—ã\n\n` +
                    `–û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –º–∞—Ä–∫–µ—Ç–∞:`;
          
          replyMarkup = {
            inline_keyboard: [
              [{ text: 'üõçÔ∏è –û—Ç–∫—Ä—ã—Ç—å –º–∞—Ä–∫–µ—Ç', web_app: { url: 'https://cibytresc-wntdgxqjpfm.lovableproject.com' } }]
            ]
          };
          break;

        case '/tournaments':
          response = `üèÜ –¢—É—Ä–Ω–∏—Ä—ã TRICKS\n\n` +
                    `–£—á–∞—Å—Ç–≤—É–π—Ç–µ –≤ —Ç—É—Ä–Ω–∏—Ä–∞—Ö –∏ –≤—ã–∏–≥—Ä—ã–≤–∞–π—Ç–µ –ø—Ä–∏–∑—ã:\n` +
                    `‚Ä¢ ü•á –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ –∫–æ–Ω–∫—É—Ä—Å—ã –≤–∏–¥–µ–æ\n` +
                    `‚Ä¢ üé™ –û–Ω–ª–∞–π–Ω —Ç—É—Ä–Ω–∏—Ä—ã –ø–æ —Ç—Ä—é–∫–∞–º\n` +
                    `‚Ä¢ üèÖ –û—Ñ–ª–∞–π–Ω –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è (Premium)\n` +
                    `‚Ä¢ üí∞ –î–µ–Ω–µ–∂–Ω—ã–µ –ø—Ä–∏–∑—ã\n\n` +
                    `–û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —É—á–∞—Å—Ç–∏—è:`;
          
          replyMarkup = {
            inline_keyboard: [
              [{ text: 'üèÜ –£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ —Ç—É—Ä–Ω–∏—Ä–∞—Ö', web_app: { url: 'https://cibytresc-wntdgxqjpfm.lovableproject.com' } }]
            ]
          };
          break;

        default:
          if (text.startsWith('/')) {
            response = `‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: ${text}\n\n` +
                      `–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n` +
                      `üéÆ /app ‚Äî –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ\n` +
                      `üíé /premium ‚Äî Premium –ø–æ–¥–ø–∏—Å–∫–∞\n` +
                      `üìä /stats ‚Äî –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n` +
                      `üõçÔ∏è /market ‚Äî –ú–∞—Ä–∫–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤\n` +
                      `üèÜ /tournaments ‚Äî –¢—É—Ä–Ω–∏—Ä—ã\n` +
                      `‚ùì /help ‚Äî –ü–æ–º–æ—â—å\n` +
                      `üìû /support ‚Äî –ü–æ–¥–¥–µ—Ä–∂–∫–∞`;
          } else {
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
            response = `–ü—Ä–∏–≤–µ—Ç, ${user.first_name}! üëã\n\n` +
                      `–Ø –±–æ—Ç TRICKS. –î–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–ª–∞—Ç—Ñ–æ—Ä–º–æ–π –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã –∏–ª–∏ –æ—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:\n\n` +
                      `üéÆ /app ‚Äî –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ\n` +
                      `‚ùì /help ‚Äî –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥`;
          }
          break;
      }

      if (response) {
        await sendMessage(chatId, response, replyMarkup ? { reply_markup: replyMarkup } : {});
      }
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ callback query (–Ω–∞–∂–∞—Ç–∏—è –Ω–∞ inline –∫–Ω–æ–ø–∫–∏)
    if (update.callback_query) {
      const callbackQuery = update.callback_query;
      const chatId = callbackQuery.message.chat.id;
      const data = callbackQuery.data;
      const user = callbackQuery.from;

      console.log(`üîò –ü–æ–ª—É—á–µ–Ω callback: ${data} –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user.id}`);

      let response = '';
      let replyMarkup = null;

      switch (data) {
        case 'premium_info':
          response = `üíé TRICKS PREMIUM\n\n` +
                    `üåü –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ Premium –ø–æ–¥–ø–∏—Å–∫–∏:\n\n` +
                    `‚ú® –≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ —Å–∫–∏–¥–∫–∏ —É –ø–∞—Ä—Ç–Ω—ë—Ä–æ–≤\n` +
                    `üèÜ –£—á–∞—Å—Ç–∏–µ –≤ –æ–Ω–ª–∞–π–Ω –∏ –æ—Ñ–ª–∞–π–Ω —Ç—É—Ä–Ω–∏—Ä–∞—Ö\n` +
                    `üéâ –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –Ω–∞ –∑–∞–∫—Ä—ã—Ç—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è\n` +
                    `üí∞ –í—ã–≤–æ–¥ –±–∞–ª–ª–æ–≤ –≤ USDT\n` +
                    `üëë –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –∑–Ω–∞—á–æ–∫ –ø—Ä–µ–º–∏—É–º-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n` +
                    `üõçÔ∏è –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–æ–±–∞–≤–ª—è—Ç—å —Ç–æ–≤–∞—Ä—ã –≤ –º–∞—Ä–∫–µ—Ç\n\n` +
                    `üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: 1 ‚≠ê –≤ –º–µ—Å—è—Ü —Å –∞–≤—Ç–æ–ø—Ä–æ–¥–ª–µ–Ω–∏–µ–º`;
          
          replyMarkup = {
            inline_keyboard: [
              [{ text: 'üéÆ –û—Ñ–æ—Ä–º–∏—Ç—å Premium', web_app: { url: 'https://cibytresc-wntdgxqjpfm.lovableproject.com' } }]
            ]
          };
          break;

        case 'help':
          response = `‚ùì –ü–æ–º–æ—â—å –ø–æ TRICKS\n\n` +
                    `TRICKS ‚Äî –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è –ª—é–±–∏—Ç–µ–ª–µ–π —ç–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω—ã—Ö –≤–∏–¥–æ–≤ —Å–ø–æ—Ä—Ç–∞.\n\n` +
                    `–û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:\n` +
                    `‚Ä¢ üìπ –ó–∞–≥—Ä—É–∑–∫–∞ –∏ –ø—Ä–æ—Å–º–æ—Ç—Ä –≤–∏–¥–µ–æ —Å —Ç—Ä—é–∫–∞–º–∏\n` +
                    `‚Ä¢ üí∞ –°–∏—Å—Ç–µ–º–∞ –±–∞–ª–ª–æ–≤ –∏ –Ω–∞–≥—Ä–∞–¥\n` +
                    `‚Ä¢ üèÜ –¢—É—Ä–Ω–∏—Ä—ã –∏ –∫–æ–Ω–∫—É—Ä—Å—ã\n` +
                    `‚Ä¢ üõçÔ∏è –ú–∞—Ä–∫–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤\n` +
                    `‚Ä¢ üë• –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏\n\n` +
                    `üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞: @tricksby`;
          break;
      }

      // –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback query
      await fetch(`https://api.telegram.org/bot${botToken}/answerCallbackQuery`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          callback_query_id: callbackQuery.id,
          text: '–ó–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è...'
        }),
      });

      if (response) {
        await sendMessage(chatId, response, replyMarkup ? { reply_markup: replyMarkup } : {});
      }
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ pre_checkout_query –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞
    if (update.pre_checkout_query) {
      const preCheckoutQuery = update.pre_checkout_query;
      
      console.log('üí≥ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞:', {
        id: preCheckoutQuery.id,
        from: preCheckoutQuery.from,
        currency: preCheckoutQuery.currency,
        total_amount: preCheckoutQuery.total_amount,
        invoice_payload: preCheckoutQuery.invoice_payload
      });
      
      // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –ø–ª–∞—Ç–µ–∂
      await fetch(`https://api.telegram.org/bot${botToken}/answerPreCheckoutQuery`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          pre_checkout_query_id: preCheckoutQuery.id,
          ok: true
        }),
      });
    }

    return new Response(JSON.stringify({ ok: true }), {
      status: 200,
      headers: { ...corsHeaders, 'Content-Type': 'application/json' },
    });

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ telegram-bot:', error);
    return new Response(JSON.stringify({ error: error.message }), {
      status: 500,
      headers: { ...corsHeaders, 'Content-Type': 'application/json' },
    });
  }
};

serve(serve_handler);
