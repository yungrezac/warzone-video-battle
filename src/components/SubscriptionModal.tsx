import React, { useState } from 'react';
import { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Crown, Star, Check, X, Loader2, CheckCircle2, AlertTriangle, Info } from 'lucide-react';
import { useSubscription } from '@/hooks/useSubscription';
import { useTelegramWebApp } from '@/hooks/useTelegramWebApp';
import { useToast } from '@/hooks/use-toast';

interface SubscriptionModalProps {
  children: React.ReactNode;
}

const SubscriptionModal: React.FC<SubscriptionModalProps> = ({ children }) => {
  const [isOpen, setIsOpen] = useState(false);
  const [view, setView] = useState<'default' | 'processing' | 'status'>('default');
  const [paymentResult, setPaymentResult] = useState<{ status: string; title: string; description: string } | null>(null);

  const { subscription, isPremium, createInvoice, isCreatingInvoice } = useSubscription();
  const { webApp } = useTelegramWebApp();
  const { toast } = useToast();

  const handleOpenChange = (open: boolean) => {
    setIsOpen(open);
    if (!open) {
      // Reset state on close after animation
      setTimeout(() => {
        setView('default');
        setPaymentResult(null);
      }, 300);
    }
  };

  const handleSubscribe = async () => {
    if (!webApp) {
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: "–î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –≤ Telegram",
        variant: "destructive",
      });
      return;
    }

    setView('processing');

    try {
      console.log('üéØ –°–æ–∑–¥–∞–µ–º –∏–Ω–≤–æ–π—Å –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏...');
      
      const invoiceData = await createInvoice();
      console.log('üìÑ –î–∞–Ω–Ω—ã–µ –∏–Ω–≤–æ–π—Å–∞:', invoiceData);

      if (!invoiceData?.invoice_url) {
        throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å URL –∏–Ω–≤–æ–π—Å–∞');
      }

      console.log('üí≥ –û—Ç–∫—Ä—ã–≤–∞–µ–º –∏–Ω–≤–æ–π—Å —á–µ—Ä–µ–∑ webApp.openInvoice...');
      console.log('üîó URL –∏–Ω–≤–æ–π—Å–∞:', invoiceData.invoice_url);

      if (webApp.openInvoice) {
        webApp.openInvoice(invoiceData.invoice_url, (status: string) => {
          console.log('üí∞ –°—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞:', status);
          
          if (status === 'paid') {
            setPaymentResult({
                status,
                title: "–£—Å–ø–µ—Ö!",
                description: "–ü–æ–¥–ø–∏—Å–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞. –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É!",
            });
            toast({
              title: "–£—Å–ø–µ—Ö!",
              description: "–ü–æ–¥–ø–∏—Å–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞",
            });
          } else if (status === 'cancelled') {
             setPaymentResult({
                status,
                title: "–ü–ª–∞—Ç–µ–∂ –æ—Ç–º–µ–Ω–µ–Ω",
                description: "–í—ã –º–æ–∂–µ—Ç–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–æ–≤–µ—Ä—à–∏—Ç—å –ø–ª–∞—Ç–µ–∂ –µ—â–µ —Ä–∞–∑.",
            });
            toast({
              title: "–ü–ª–∞—Ç–µ–∂ –æ—Ç–º–µ–Ω–µ–Ω",
              description: "–í—ã –º–æ–∂–µ—Ç–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑",
            });
          } else if (status === 'failed') {
            setPaymentResult({
                status,
                title: "–û—à–∏–±–∫–∞ –ø–ª–∞—Ç–µ–∂–∞",
                description: "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –ø–ª–∞—Ç–µ–∂. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.",
            });
            toast({
              title: "–û—à–∏–±–∫–∞ –ø–ª–∞—Ç–µ–∂–∞",
              description: "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É",
              variant: "destructive",
            });
          }
           setView('status');
        });
      } else {
        // Fallback: –æ—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Å—ã–ª–∫—É –≤ –±—Ä–∞—É–∑–µ—Ä–µ
        console.log('üîó Fallback: –æ—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Å—ã–ª–∫—É...');
        if (webApp.openLink) {
          webApp.openLink(invoiceData.invoice_url);
        } else {
          window.open(invoiceData.invoice_url, '_blank');
        }
        
        toast({
          title: "–ò–Ω–≤–æ–π—Å —Å–æ–∑–¥–∞–Ω",
          description: "–û—Ç–∫—Ä–æ–π—Ç–µ —Å—Å—ã–ª–∫—É –¥–ª—è –æ–ø–ª–∞—Ç—ã",
        });
        setIsOpen(false);
      }
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞:', error);
      
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: error instanceof Error ? error.message : "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Å—á–µ—Ç –¥–ª—è –æ–ø–ª–∞—Ç—ã",
        variant: "destructive",
      });
      setView('default');
    }
  };

  const premiumFeatures = [
    '–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ —Å–∫–∏–¥–∫–∏ —É –ø–∞—Ä—Ç–Ω—ë—Ä–æ–≤ TRICKS',
    '–£—á–∞—Å—Ç–∏–µ –≤ –æ–Ω–ª–∞–π–Ω –∏ –æ—Ñ–ª–∞–π–Ω —Ç—É—Ä–Ω–∏—Ä–∞—Ö',
    '–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –Ω–∞ –∑–∞–∫—Ä—ã—Ç—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è',
    '–í—ã–≤–æ–¥ –±–∞–ª–ª–æ–≤ –≤ USDT',
    '–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –∑–Ω–∞—á–æ–∫ –ø—Ä–µ–º–∏—É–º-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
    '–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–æ–±–∞–≤–ª—è—Ç—å —Å–≤–æ–π —Ç–æ–≤–∞—Ä –≤ –º–∞—Ä–∫–µ—Ç',
  ];

  const formatDate = (dateString: string) => {
    return new Date(dateString).toLocaleDateString('ru-RU', {
      year: 'numeric',
      month: 'long',
      day: 'numeric'
    });
  };

  return (
    <Dialog open={isOpen} onOpenChange={handleOpenChange}>
      <DialogTrigger asChild>
        {children}
      </DialogTrigger>
      <DialogContent className="max-w-md !rounded-xl">
        {view === 'default' && (
          <>
            <DialogHeader>
              <DialogTitle className="flex items-center gap-2">
                <Crown className="w-6 h-6 text-yellow-500" />
                Premium –ø–æ–¥–ø–∏—Å–∫–∞
              </DialogTitle>
              <DialogDescription>
                –ü–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–º —Ñ—É–Ω–∫—Ü–∏—è–º
              </DialogDescription>
            </DialogHeader>

            <div className="space-y-4">
              {isPremium ? (
                <Card className="border-yellow-200 bg-yellow-50">
                  <CardHeader className="pb-3">
                    <CardTitle className="text-lg flex items-center gap-2 text-yellow-700">
                      <Crown className="w-5 h-5" />
                      –ê–∫—Ç–∏–≤–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞
                    </CardTitle>
                    <CardDescription className="text-yellow-600">
                      {subscription && `–î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ ${formatDate(subscription.expires_at)}`}
                    </CardDescription>
                  </CardHeader>
                  <CardContent>
                    <div className="text-sm text-yellow-700">
                      –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É! –í–∞—à–∞ –ø—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞.
                    </div>
                  </CardContent>
                </Card>
              ) : (
                <>
                  <Card className="border-purple-200 bg-gradient-to-br from-purple-50 to-pink-50">
                    <CardHeader className="text-center pb-3">
                      <div className="mx-auto w-16 h-16 bg-gradient-to-br from-purple-500 to-pink-500 rounded-full flex items-center justify-center mb-2">
                        <Crown className="w-8 h-8 text-white" />
                      </div>
                      <CardTitle className="text-xl">Premium</CardTitle>
                      <CardDescription className="flex items-center justify-center gap-1">
                        <Star className="w-4 h-4 text-yellow-500" />
                        <span className="text-lg font-bold">1 Star</span>
                        <span className="text-sm text-gray-500">/–º–µ—Å—è—Ü</span>
                      </CardDescription>
                    </CardHeader>
                    <CardContent className="space-y-3">
                      {premiumFeatures.map((feature, index) => (
                        <div key={index} className="flex items-center gap-2">
                          <Check className="w-4 h-4 text-green-500 flex-shrink-0" />
                          <span className="text-sm">{feature}</span>
                        </div>
                      ))}
                    </CardContent>
                  </Card>

                  <Button 
                    onClick={handleSubscribe}
                    disabled={isCreatingInvoice}
                    className="w-full bg-gradient-to-r from-purple-500 to-pink-500 hover:from-purple-600 hover:to-pink-600 text-white"
                    size="lg"
                  >
                    {isCreatingInvoice ? (
                      <>
                        <div className="w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin mr-2" />
                        –°–æ–∑–¥–∞–µ–º —Å—á–µ—Ç...
                      </>
                    ) : (
                      <>
                        <Star className="w-4 h-4 mr-2" />
                        –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –∑–∞ 1 Star
                      </>
                    )}
                  </Button>

                  <div className="text-xs text-gray-500 text-center">
                    –û–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ Telegram Stars. –ü–æ–¥–ø–∏—Å–∫–∞ –ø—Ä–æ–¥–ª–µ–≤–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.
                  </div>
                </>
              )}
            </div>
          </>
        )}

        {view === 'processing' && (
            <div className="flex flex-col items-center justify-center text-center p-8 space-y-4 min-h-[300px]">
                <Loader2 className="w-12 h-12 text-purple-500 animate-spin" />
                <h3 className="text-lg font-semibold">–û–∂–∏–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞</h3>
                <p className="text-sm text-gray-500">
                    –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –æ–ø–ª–∞—Ç—É –≤ –æ—Ç–∫—Ä—ã–≤—à–µ–º—Å—è –æ–∫–Ω–µ Telegram.
                </p>
            </div>
        )}

        {view === 'status' && paymentResult && (
            <div className="flex flex-col items-center justify-center text-center p-8 space-y-4 min-h-[300px]">
                {paymentResult.status === 'paid' && <CheckCircle2 className="w-12 h-12 text-green-500" />}
                {paymentResult.status === 'cancelled' && <Info className="w-12 h-12 text-yellow-500" />}
                {paymentResult.status === 'failed' && <AlertTriangle className="w-12 h-12 text-red-500" />}
                
                <h3 className="text-lg font-semibold">{paymentResult.title}</h3>
                <p className="text-sm text-gray-500">{paymentResult.description}</p>
                
                <div className="flex gap-2 pt-4 w-full">
                    {paymentResult.status === 'paid' ? (
                        <Button className="w-full" onClick={() => window.location.reload()}>
                            –û—Ç–ª–∏—á–Ω–æ!
                        </Button>
                    ) : (
                        <>
                            <Button variant="outline" className="w-full" onClick={() => setIsOpen(false)}>
                                –ó–∞–∫—Ä—ã—Ç—å
                            </Button>
                            <Button className="w-full bg-gradient-to-r from-purple-500 to-pink-500 hover:from-purple-600 hover:to-pink-600 text-white" onClick={() => setView('default')}>
                                –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
                            </Button>
                        </>
                    )}
                </div>
            </div>
        )}
      </DialogContent>
    </Dialog>
  );
};

export default SubscriptionModal;
