
export const captureElementAsImage = async (element: HTMLElement): Promise<Blob> => {
  // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º html2canvas –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏
  const html2canvas = (await import('html2canvas')).default;
  
  const canvas = await html2canvas(element, {
    useCORS: true,
    allowTaint: true,
    backgroundColor: '#ffffff',
    scale: 2, // –í—ã—Å–æ–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ
    width: element.offsetWidth,
    height: element.offsetHeight,
  });

  return new Promise((resolve) => {
    canvas.toBlob((blob) => {
      resolve(blob!);
    }, 'image/png', 0.9);
  });
};

export const shareToTelegram = async (imageBlob: Blob, text: string) => {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å Telegram WebApp
    if (window.Telegram?.WebApp) {
      const tg = window.Telegram.WebApp;
      
      // –°–æ–∑–¥–∞–µ–º FormData –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
      const formData = new FormData();
      formData.append('photo', imageBlob, 'trick_share.png');
      formData.append('caption', text);
      
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Ç–æ–¥ –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤ Telegram
      if (typeof tg.sendData === 'function') {
        const shareData = {
          type: 'share_image',
          image: await blobToBase64(imageBlob),
          text: text
        };
        
        tg.sendData(JSON.stringify(shareData));
        return true;
      }
      
      // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± —á–µ—Ä–µ–∑ HapticFeedback –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
      if (tg.HapticFeedback) {
        tg.HapticFeedback.impactOccurred('medium');
      }
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –Ω—É–∂–Ω–æ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –≤—Ä—É—á–Ω—É—é
      if (tg.showAlert) {
        tg.showAlert('–°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ç–µ–∫—Å—Ç –∏ –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –≤ —á–∞—Ç–µ Telegram!');
      }
      
      // –ö–æ–ø–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞
      await navigator.clipboard.writeText(text);
      
      return true;
    } else {
      // –í–µ–±-–≤–µ—Ä—Å–∏—è - –∏—Å–ø–æ–ª—å–∑—É–µ–º Web Share API –∏–ª–∏ fallback
      if (navigator.share) {
        const file = new File([imageBlob], 'trick_share.png', { type: 'image/png' });
        await navigator.share({
          title: 'TRICKS',
          text: text,
          files: [file]
        });
        return true;
      } else {
        // Fallback - —Å–∫–∞—á–∏–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ –∫–æ–ø–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç
        downloadImage(imageBlob, 'trick_share.png');
        await navigator.clipboard.writeText(text);
        alert('–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–∫–∞—á–∞–Ω–æ, —Ç–µ–∫—Å—Ç —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!');
        return true;
      }
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è:', error);
    
    // Fallback - —Å–∫–∞—á–∏–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    try {
      downloadImage(imageBlob, 'trick_share.png');
      await navigator.clipboard.writeText(text);
      alert('–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–∫–∞—á–∞–Ω–æ, —Ç–µ–∫—Å—Ç —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!');
      return true;
    } catch (fallbackError) {
      console.error('–û—à–∏–±–∫–∞ fallback:', fallbackError);
      return false;
    }
  }
};

const blobToBase64 = (blob: Blob): Promise<string> => {
  return new Promise((resolve, reject) => {
    const reader = new FileReader();
    reader.onload = () => resolve(reader.result as string);
    reader.onerror = reject;
    reader.readAsDataURL(blob);
  });
};

const downloadImage = (blob: Blob, filename: string) => {
  const url = URL.createObjectURL(blob);
  const a = document.createElement('a');
  a.href = url;
  a.download = filename;
  document.body.appendChild(a);
  a.click();
  document.body.removeChild(a);
  URL.revokeObjectURL(url);
};

export const generateShareText = (
  isOwnVideo: boolean, 
  videoOwnerName: string,
  appUrl: string = 'https://t.me/TricksVideosBot/start'
): string => {
  if (isOwnVideo) {
    return `üéØ –ü–æ—Å–º–æ—Ç—Ä–∏ –Ω–∞ –º–æ–π —Ç—Ä—é–∫ –≤ TRICKS!\n\n${appUrl}`;
  } else {
    return `üéØ –ü–æ—Å–º–æ—Ç—Ä–∏ —Ç—Ä—é–∫ ${videoOwnerName} –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ TRICKS!\n\n${appUrl}`;
  }
};
