
import { supabase } from '@/integrations/supabase/client';

export const useTelegramNotifications = () => {
  const sendNotification = async (
    telegramId: string, 
    message: string, 
    type: 'like' | 'comment' | 'achievement' | 'daily_winner'
  ) => {
    try {
      console.log(`–û—Ç–ø—Ä–∞–≤–ª—è–µ–º Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${telegramId}:`, message);
      
      const { data, error } = await supabase.functions.invoke('send-telegram-notification', {
        body: {
          telegramId,
          message,
          type,
        },
      });

      if (error) {
        console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', error);
        throw error;
      }

      console.log('Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ:', data);
      return data;
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', error);
      throw error;
    }
  };

  const sendLikeNotification = async (videoOwnerTelegramId: string, likerName: string, videoTitle: string) => {
    const message = `‚ù§Ô∏è <b>${likerName}</b> –ø–æ—Å—Ç–∞–≤–∏–ª –ª–∞–π–∫ –≤–∞—à–µ–º—É –≤–∏–¥–µ–æ "<b>${videoTitle}</b>"!`;
    return sendNotification(videoOwnerTelegramId, message, 'like');
  };

  const sendCommentNotification = async (videoOwnerTelegramId: string, commenterName: string, videoTitle: string, comment: string) => {
    const shortComment = comment.length > 50 ? comment.substring(0, 50) + '...' : comment;
    const message = `üí¨ <b>${commenterName}</b> –æ—Å—Ç–∞–≤–∏–ª –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –≤–∞—à–µ–º—É –≤–∏–¥–µ–æ "<b>${videoTitle}</b>":\n\n"${shortComment}"`;
    return sendNotification(videoOwnerTelegramId, message, 'comment');
  };

  const sendAchievementNotification = async (userTelegramId: string, achievementTitle: string, achievementIcon: string, rewardPoints: number) => {
    const message = `üèÜ <b>–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!</b>\n\n–í—ã –ø–æ–ª—É—á–∏–ª–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ:\n${achievementIcon} <b>${achievementTitle}</b>\n\n+${rewardPoints} –±–∞–ª–ª–æ–≤!`;
    return sendNotification(userTelegramId, message, 'achievement');
  };

  const sendDailyWinnerNotification = async (winnerTelegramId: string, videoTitle: string, totalPoints: number) => {
    const message = `üéâ <b>–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!</b>\n\n–í–∞—à–µ –≤–∏–¥–µ–æ "<b>${videoTitle}</b>" –ø–æ–±–µ–¥–∏–ª–æ –≤ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–º –∫–æ–Ω–∫—É—Ä—Å–µ!\n\n–í—ã –ø–æ–ª—É—á–∏–ª–∏ <b>${totalPoints} –±–∞–ª–ª–æ–≤</b>!`;
    return sendNotification(winnerTelegramId, message, 'daily_winner');
  };

  return {
    sendLikeNotification,
    sendCommentNotification,
    sendAchievementNotification,
    sendDailyWinnerNotification,
  };
};
